
#aux_source_directory(./cjson CJSON_SRCS)
aux_source_directory(./apis APIS_SRCS)
aux_source_directory(./base BASE_SRCS)
aux_source_directory(./ecdsa ECDSA_SRCS)
aux_source_directory(./hash HASH_SRCS)
aux_source_directory(./md5 MD5_SRCS)
aux_source_directory(./average AVE_SRCS)
aux_source_directory(./aes AES_SRCS)

set(CMAKE_C_FLAGS " ${CMAKE_C_FLAGS} -O3")
set(CMAKE_C_FLAGS " ${CMAKE_C_FLAGS} -std=gnu99")
set(CMAKE_C_FLAGS " ${CMAKE_C_FLAGS} -W")
set(CMAKE_C_FLAGS " ${CMAKE_C_FLAGS} -Wall")
set(CMAKE_C_FLAGS " ${CMAKE_C_FLAGS} -Wextra")
#set(CMAKE_C_FLAGS " ${CMAKE_C_FLAGS} -Wimplicit-function-declaration")
set(CMAKE_C_FLAGS " ${CMAKE_C_FLAGS} -Wredundant-decls")
set(CMAKE_C_FLAGS " ${CMAKE_C_FLAGS} -Wstrict-prototypes")
#set(CMAKE_C_FLAGS " ${CMAKE_C_FLAGS} -Wundef")
set(CMAKE_C_FLAGS " ${CMAKE_C_FLAGS} -Wshadow")
set(CMAKE_C_FLAGS " ${CMAKE_C_FLAGS} -Wpointer-arith")
set(CMAKE_C_FLAGS " ${CMAKE_C_FLAGS} -Wformat")
set(CMAKE_C_FLAGS " ${CMAKE_C_FLAGS} -Wreturn-type")
set(CMAKE_C_FLAGS " ${CMAKE_C_FLAGS} -Wsign-compare")
set(CMAKE_C_FLAGS " ${CMAKE_C_FLAGS} -Wmultichar")
set(CMAKE_C_FLAGS " ${CMAKE_C_FLAGS} -Wformat-nonliteral")
set(CMAKE_C_FLAGS " ${CMAKE_C_FLAGS} -Winit-self")
set(CMAKE_C_FLAGS " ${CMAKE_C_FLAGS} -Wuninitialized")
set(CMAKE_C_FLAGS " ${CMAKE_C_FLAGS} -Wformat-security")
#set(CMAKE_C_FLAGS " ${CMAKE_C_FLAGS} -Werror")
set(CMAKE_C_FLAGS " ${CMAKE_C_FLAGS} -Wno-unused-parameter")
set(CMAKE_C_FLAGS " ${CMAKE_C_FLAGS} -DVALGRIND=1")

set(EX_HEAD_FILE apis/algorithm_api.h)

set(TARGET_SRC ${APIS_SRCS})
set(TARGET_SRC ${TARGET_SRC} ${BASE_SRCS})
set(TARGET_SRC ${TARGET_SRC} ${ECDSA_SRCS})
set(TARGET_SRC ${TARGET_SRC} ${HASH_SRCS})
set(TARGET_SRC ${TARGET_SRC} ${MD5_SRCS})
set(TARGET_SRC ${TARGET_SRC} ${AVE_SRCS})
set(TARGET_SRC ${TARGET_SRC} ${AES_SRCS})

add_library(algorithm SHARED ${TARGET_SRC})

SET_TARGET_PROPERTIES(algorithm PROPERTIES VERSION ${SW_VERSION} SOVERSION 1)

INSTALL(TARGETS algorithm LIBRARY DESTINATION lib)
INSTALL(FILES ${EX_HEAD_FILE} DESTINATION ${INC_PATH}/algorithm)